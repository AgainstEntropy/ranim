name = "getting_started0"
code = """
```rust
use log::LevelFilter;\r
use ranim::{\r
    animation::fading::FadingAnim, color::palettes::manim, items::vitem::geometry::Square,\r
    prelude::*,\r
};\r
\r
#[scene]\r
#[preview]\r
#[output(dir = "getting_started0")]\r
fn getting_started0(r: &mut RanimScene) {\r
    let _r_cam = r.insert_and_show(CameraFrame::default());\r
        // A Square with size 2.0 and color blue\r
        let square = Square::new(2.0).with(|square| {\r
            square.set_color(manim::BLUE_C);\r
        });\r
\r
        let r_square = r.insert(square);\r
        {\r
            let timeline = r.timeline_mut(&r_square);\r
            timeline\r
                .play_with(|square| square.fade_in())\r
                .forward(1.0)\r
                .hide()\r
                .forward(1.0)\r
                .show()\r
                .forward(1.0)\r
                .play_with(|square| square.fade_out());\r
        }\r
}\r
// ANCHOR_END: construct\r
\r
fn main() {\r
    #[cfg(not(target_arch = "wasm32"))]\r
    {\r
        #[cfg(debug_assertions)]\r
        pretty_env_logger::formatted_timed_builder()\r
            .filter(Some("ranim"), LevelFilter::Trace)\r
            .init();\r
        #[cfg(not(debug_assertions))]\r
        pretty_env_logger::formatted_timed_builder()\r
            .filter(Some("ranim"), LevelFilter::Info)\r
            .init();\r
    }\r
\r
    #[cfg(feature = "app")]\r
    preview(getting_started0);\r
    #[cfg(not(feature = "app"))]\r
    render(getting_started0);\r
}\r
```"""
hash = "f15032797644e26c2cedd0d33dce9028f6fda1e6"
preview_imgs = []
output_files = ["/examples/getting_started0/getting_started0_1920x1080_60.mp4"]
wasm = true
