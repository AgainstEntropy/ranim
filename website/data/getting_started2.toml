name = "getting_started2"
code = """
```rust
use log::LevelFilter;\r
use ranim::{\r
    animation::{\r
        creation::{CreationAnim, WritingAnim},\r
        transform::TransformAnim,\r
    },\r
    color::palettes::manim,\r
    items::vitem::{\r
        VItem,\r
        geometry::{Circle, Rectangle, Square},\r
    },\r
    prelude::*,\r
    utils::rate_functions::linear,\r
};\r
\r
#[scene]\r
#[preview]\r
#[output(dir = "getting_started2")]\r
fn getting_started2(r: &mut RanimScene) {\r
    let _r_cam = r.insert_and_show(CameraFrame::default());\r
        let rect = Rectangle::new(4.0, 9.0 / 4.0).with(|rect| {\r
            rect.set_stroke_color(manim::GREEN_C);\r
        });\r
\r
        // The new initialized timeline is hidden by default, use show to start encoding a static anim and make it show\r
        let r_rect: ItemId<Rectangle> = r.insert_and(rect, |timeline| {\r
            timeline.show();\r
        });\r
        // or use `insert_and_show`\r
        // let r_rect: ItemId<Rectangle> = r.insert_and_show(rect)\r
\r
        r.timelines_mut().forward(1.0);\r
\r
        let square = Square::new(2.0).with(|square| {\r
            square.set_color(manim::BLUE_C);\r
        });\r
        let circle = Circle::new(2.0).with(|circle| {\r
            circle.set_color(manim::RED_C);\r
        });\r
        let r_vitem = r.insert(VItem::from(square));\r
        {\r
            let timeline = r.timeline_mut(&r_vitem);\r
            timeline\r
                .forward(1.0)\r
                .play_with(|vitem| vitem.create())\r
                .play_with(|vitem| {\r
                    vitem\r
                        .transform_to(VItem::from(circle.clone()))\r
                        .with_rate_func(linear)\r
                })\r
                .play_with(|vitem| vitem.unwrite());\r
        }\r
\r
        let r_rect: ItemId<VItem> = r.map(r_rect, VItem::from);\r
        r.timeline_mut(&r_rect).play_with(|rect| rect.uncreate());\r
}\r
\r
fn main() {\r
    #[cfg(not(target_arch = "wasm32"))]\r
    {\r
        #[cfg(debug_assertions)]\r
        pretty_env_logger::formatted_timed_builder()\r
            .filter(Some("ranim"), LevelFilter::Trace)\r
            .init();\r
        #[cfg(not(debug_assertions))]\r
        pretty_env_logger::formatted_timed_builder()\r
            .filter(Some("ranim"), LevelFilter::Info)\r
            .init();\r
    }\r
\r
    #[cfg(feature = "app")]\r
    preview(getting_started2);\r
    #[cfg(not(feature = "app"))]\r
    render(getting_started2);\r
}\r
```"""
hash = "a6815190e8ee060e8f5387ac9d2c2a80f7464467"
preview_imgs = []
output_files = ["/examples/getting_started2/getting_started2_1920x1080_60.mp4"]
wasm = true
