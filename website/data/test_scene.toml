name = "test_scene"
code = """
```rust
#![allow(clippy::all)]\r
#![allow(unused_imports)]\r
use std::time::Duration;\r
\r
use env_logger::Env;\r
use glam::Vec3;\r
use ranim::{\r
    animation::{creation::CreationAnim, transform::TransformAnim},\r
    components::TransformAnchor,\r
    items::{\r
        svg_item::SvgItem,\r
        vitem::{Square, VItem},\r
        Rabject,\r
    },\r
    prelude::*,\r
    render_timeline,\r
    timeline::Timeline,\r
    AppOptions, TimelineConstructor,\r
};\r
use ranim_macros::timeline;\r
\r
const SVG: &str = include_str!(\"../../assets/Ghostscript_Tiger.svg\");\r
\r
#[timeline(width = 3840, height = 2160, fps = 60)]\r
fn test_scene(timeline: &Timeline) {\r
    let svg = SvgItem::from_svg(SVG);\r
\r
    let mut svg = timeline.insert(svg);\r
    svg.transform(|svg| {\r
        svg.scale(Vec3::splat(3.272)).scale(Vec3::splat(2.0));\r
    })\r
    .apply();\r
\r
    timeline.forward(10.0);\r
}\r
\r
fn main() {\r
    #[cfg(debug_assertions)]\r
    env_logger::Builder::from_env(Env::default().default_filter_or(\"test_scene=trace\")).init();\r
    #[cfg(not(debug_assertions))]\r
    env_logger::Builder::from_env(Env::default().default_filter_or(\"test_scene=info,ranim=trace\"))\r
        .init();\r
    render_timeline!(test_scene);\r
    // TestScene.render(&AppOptions {\r
    //     frame_rate: 60,\r
    //     frame_size: (3840, 2160),\r
    //     save_frames: true,\r
    //     ..Default::default()\r
    // });\r
}\r

```"""
output_type = "video"
output_path = "/examples/test_scene/output.mp4"
